apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        def BOOLEAN = "boolean"
        def TRUE = "true"
        def FALSE = "false"
        def IS_SHOW_LOG = "IS_SHOW_LOG"

        debug {
            minifyEnabled false
            buildConfigField BOOLEAN, IS_SHOW_LOG, TRUE
        }

        release {
            minifyEnabled false
            buildConfigField BOOLEAN, IS_SHOW_LOG, FALSE
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishNonDefault true
}

dependencies {
    // androidx
    api "com.android.support:multidex:$rootProject.multidexVersion"
    api "androidx.appcompat:appcompat:$rootProject.androidxVersion"
    //api "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayoutVersion"
    //api "com.google.android.material:material:$rootProject.materialVersion"
    //api "androidx.recyclerview:recyclerview:$rootProject.recyclerviewVersion"

    // Logger
    api ("com.orhanobut:logger:$rootProject.loggerVersion"){
        exclude group: "com.android.support"
    }

    // Gson
    api "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Glide
    api ("com.github.bumptech.glide:glide:$rootProject.glideVersion"){
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    //api "com.github.bumptech.glide:okhttp-integration:$rootProject.glideokhttpVersion"
    api "jp.wasabeef:glide-transformations:$rootProject.glideTransformationVersion"

    // RxJava
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    api "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxbindingVersion"

     // OkHttp
    //api "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
   // api "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"

     // Retrofit2
     /*api "com.squareup.retrofit2:retrofit:${rootProject.retrofitVersion}"
     api "com.squareup.retrofit2:adapter-rxjava2:${rootProject.retrofitVersion}"
     api "com.squareup.retrofit2:converter-gson:${rootProject.retrofitVersion}"
     api "com.squareup.retrofit2:converter-scalars:${rootProject.retrofitVersion}"
     api "com.squareup.retrofit2:converter-jaxb:${rootProject.retrofitVersion}"

     // Butterknife
     api "com.jakewharton:butterknife:$rootProject.butterknifeVersion"

     // Gif
     api "pl.droidsonroids.gif:android-gif-drawable:$rootProject.gifVersion"

     // Fragmentation
     api "me.yokeyword:fragmentationx:$rootProject.fragmentationVersion"

     // circle imageview
     api "de.hdodenhof:circleimageview:$rootProject.circleImageviewVersion"

     // SwitchButton
     api "com.kyleduo.switchbutton:library:$rootProject.SwtichButtonVersion"

     // PhotoView
     api "com.bm.photoview:library:$rootProject.PhotoViewVersion"

     // BottomSheet
     api "com.cocosw:bottomsheet:$rootProject.BottomSheetVersion"

     // permissions
     api "com.tbruyelle.rxpermissions2:rxpermissions:$rootProject.rxPerssionsVersion"

     // Eventbus
     api "org.greenrobot:eventbus:$rootProject.eventbusVersion"

     // Reflection
     api "me.weishu:free_reflection:$rootProject.reflectionVersion"

     // dkzwm
     api "me.dkzwm.widget.srl:core:$rootProject.dkzwmVersion"
     api "me.dkzwm.widget.srl:ext-util:$rootProject.dkzwmVersion"
     api "me.dkzwm.widget.srl:ext-material:$rootProject.dkzwmVersion"
     api "me.dkzwm.widget.srl:ext-horizontal:$rootProject.dkzwmVersion"
     api "me.dkzwm.widget.srl:ext-classics:$rootProject.dkzwmVersion"
     api "me.dkzwm.widget.srl:ext-two-level:$rootProject.dkzwmVersion"*/
}
